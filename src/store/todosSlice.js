//CREATE THE STATE STRUCTURE
//Import createSlice component from redux toolkit
import { createSlice } from '@reduxjs/toolkit';

//CODE GIVEN IN TASK REQUIREMENTS TO SET INITIAL STATE
const initialTodoState = {
  nextId: 2,
  data: {
    1: {
      content: 'Content 1',
      completed: false
    }
  }
};

// Create the todos slice using createSlice method
const todosSlice = createSlice({
  //Name of the slice of state for implementing in our empty store
  name: 'todos',
  //Set initial state for the slice of state using the state given in requirements
  initialState: initialTodoState,

  //Create reducer which is used to manipulate the initial/current state.
  reducers: {
    //Action for creating new Todo's on the list
    addTodo: (state, action) => {
      //Pass the payload (completed field in form) to reducer to add to the state
      //and mark as not completed.
      const { content } = action.payload;
      const newTodo = {
        content,
        completed: false
      };
      //Determine the next Id to use in the state. The nextId property keeps track
      //of the ID to be assigned to the next todo.
      const newId = state.nextId;
      //Add the new todo and use the newId as the key
      state.data[newId] = newTodo;
      //Increment the state.nextId to ensure next todo is added with new unique ID.
      state.nextId++;
    },
    //Action for deleting Todo's on the list
    deleteTodo: (state, action) => {
      //Extract the id of the todo in field and delete the data associated with that id
      const { id } = action.payload;
      delete state.data[id];
    },
    //Action for editing an item on the Todo list
    editTodo: (state, action) => {
      //Extract the id and content values from the field
      const { id, content } = action.payload;
      //Using the extracted id, change the existing content to the new content.
      state.data[id].content = content;
    },
    //Action for marking a Todo item as complete
    completeTodo: (state, action) => {
      //Extract the id of the current field
      const { id } = action.payload;
      //Use boolean to set status as completed
      state.data[id].completed = true;
    }
  }
});

//Export the action creators generated by createSlice
export const {
  addTodo,
  deleteTodo,
  editTodo,
  completeTodo
} = todosSlice.actions;

// Export the todos reducer
export default todosSlice.reducer;
